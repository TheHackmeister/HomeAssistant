- id: avalanche_score
  alias: 'Avalanche: Score'
  trigger:
  - platform: event
    event_type: nhl_goal
    event_data:
      goal_tracked_team: true
  condition: []
  action:
  - service: scene.create
    data:
      scene_id: pregoal
      snapshot_entities: '{{expand(state_attr(''light.nhl_lights'', ''entity_id''))|map(attribute=''entity_id'')|list}}'
  - service: system_log.write
    data_template:
      message: 'Aves Score Automation Trigger({{ as_timestamp(now()) }}): {{ trigger
        }} '
      level: warning
  - delay:
      hours: 0
      minutes: 0
      seconds: 38
      milliseconds: 0
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id:
      - group.nhl_lights
      - light.nhl_lights
  - delay: '0.2'
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id:
      - group.nhl_lights
      - light.nhl_lights
  - delay: '0.2'
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id:
      - group.nhl_lights
      - light.nhl_lights
  - delay: '0.2'
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id:
      - group.nhl_lights
      - light.nhl_lights
  - delay: '0.2'
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id:
      - group.nhl_lights
      - light.nhl_lights
  - delay: '0.2'
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id:
      - group.nhl_lights
      - light.nhl_lights
  - delay: '0.2'
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id:
      - group.nhl_lights
      - light.nhl_lights
  - delay: '0.2'
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id:
      - group.nhl_lights
      - light.nhl_lights
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.pregoal
  initial_state: true
  mode: single
- id: set_theme
  alias: Set Home Assistant Theme on Start
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: frontend.set_theme
    data:
      name: ios-dark-mode
  mode: single
- alias: Perform Auto Backup
  trigger:
    platform: time_pattern
    hours: /3
  action:
    service: auto_backup.snapshot_partial
    data_template:
      name: 'AutoBackup: {{ now().strftime(''%a, %-I:%M %p (%d/%m/%Y)'') }}'
      addons:
      - core_mariadb
      - core_mosquitto
      folders:
      - homeassistant
      - share
      - ssl
      keep_days: 2
  id: 5b59be520ac340168ae5457813cec372
- alias: Perform Daily Backup
  trigger:
    platform: time
    at: 02:30:00
  condition:
    condition: time
    weekday:
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
  action:
    service: auto_backup.snapshot_full
    data_template:
      name: 'DailyBackup: {{ now().strftime(''%A, %B %-d, %Y'') }}'
      keep_days: 7
  id: 0488c83c127a4845994736f9fa9eb4a8
- alias: Perform Weekly Backup
  trigger:
    platform: time
    at: 02:30:00
  condition:
    condition: time
    weekday:
    - mon
  action:
    service: auto_backup.snapshot_full
    data_template:
      name: 'WeeklyBackup: {{ now().strftime(''%A, %B %-d, %Y'') }}'
      keep_days: 28
  id: 3ec6cfbb570941639d833212ddbb903e
- id: '1612306599523'
  alias: 'TV Room Button: Single Click'
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: 00:12:4b:00:21:35:ac:5b
  - platform: event
    event_type: esphome.button_click
    event_data:
      entity: tv_room_side_table
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: 5c:02:72:ff:fe:c3:cc:55
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ trigger.event.data.command  == "toggle" }}'
        - condition: template
          value_template: '{{ trigger.event.data.endpoint_id  == 4 }}'
      sequence:
      - service: homeassistant.toggle
        entity_id: group.tv_room_single_click
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ trigger.event.data.command  == "on" }}'
        - condition: template
          value_template: '{{ trigger.event.data.endpoint_id  == 3 }}'
      sequence:
      - service: homeassistant.toggle
        data: {}
        entity_id: group.tv_room_double_click
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ trigger.event.data.command  == "off" }}'
        - condition: template
          value_template: '{{ trigger.event.data.endpoint_id  == 1 }}'
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - group.tv_room_single_click
          - group.tv_room_double_click
          - light.pantry_light
    default: []
  mode: single
- id: '1612757569353'
  alias: Master Bathroom Door Lights
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: 00:15:8d:00:03:ce:be:13
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.args.value == false }}'
      - condition: time
        after: '23:30'
        before: '7:00'
      sequence:
      - service: scene.turn_on
        entity_id: scene.master_bath_lights_night
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.args.value == false }}'
      sequence:
      - service: scene.turn_on
        entity_id: scene.master_bathroom_ligths_day
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.args.value == true}}'
      sequence:
      - service: scene.turn_on
        entity_id: scene.master_bathroom_lights_off
  mode: single
- id: '1615524460190'
  alias: 'Buttons: Office 4-Button Switch'
  description: ''
  use_blueprint:
    path: homeassistant/tuya_4_switch.yaml
    input:
      tuya_4button_scene_switch: 39a9f4653dea97b165d696e02dec86e4
      button_one_short_press:
      - service: homeassistant.toggle
        target:
          entity_id:
          - group.plant_lights
          - group.plant_nursery_lights
        data: {}
      button_one_double_press:
      - service: homeassistant.turn_on
        target:
          entity_id:
          - group.plant_lights
          - group.plant_nursery_lights
        data: {}
      button_three_short_press:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.office_lights
      button_four_short_press:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.front_yard_lights
      button_three_double_press:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.office_lights
      button_three_long_press:
      - service: light.turn_off
        target:
          entity_id: light.office_lights
        data: {}
      button_four_double_press:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.front_yard_lights
      button_four_long_press:
      - service: light.turn_off
        target:
          entity_id: light.front_yard_lights
        data: {}
      button_one_long_press:
      - service: homeassistant.turn_off
        target:
          entity_id:
          - group.plant_lights
          - group.plant_nursery_lights
        data: {}
- id: delivery_coming
  alias: Delivery Complete - Turn Porch Light Red
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.noco_nosh
    to: delivery_coming
  condition: []
  action:
  - scene: scene.front_delivery
  mode: single
- id: delivery_complete
  alias: Delivery Complete - Turn Porch Light White
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.noco_nosh
    to: no_deliveries
  condition: []
  action:
  - scene: scene.front_white
  mode: single
- id: '1615690939113'
  alias: 'Buttons: House Main 4 Buttons'
  description: ''
  use_blueprint:
    path: homeassistant/tuya_4_switch.yaml
    input:
      tuya_4button_scene_switch: 57acf2649f5d0d55d239f33b8f5a4874
      button_two_long_press: []
      button_four_long_press: []
      button_four_short_press:
      - service: scene.turn_on
        target:
          entity_id: scene.cooking
        metadata: {}
      button_three_long_press: []
      button_one_short_press:
      - service: scene.turn_on
        target:
          entity_id: scene.house_mode_bright
        metadata: {}
      button_two_short_press:
      - service: scene.turn_on
        target:
          entity_id: scene.house_mode_party
        metadata: {}
      button_four_double_press:
      - service: scene.turn_on
        target:
          entity_id: scene.house_mode_mood
        metadata: {}
      button_three_short_press:
      - service: scene.turn_on
        target:
          entity_id: scene.house_mode_tv
        metadata: {}
      button_three_double_press:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.tv_room_side_table_power_relay_4
      button_two_double_press:
      - service: automation.trigger
        data: {}
        target:
          entity_id: automation.lights_restore_default_colors
      button_one_double_press:
      - service: light.toggle
        data:
          brightness_pct: 89
        target:
          area_id: office
- id: healthchecksio_ping
  alias: 'Infra: Healthcheckio ping'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition: []
  action:
  - service: rest_command.healthchecksio
    data: {}
  mode: single
- id: '1619370413023'
  alias: 'Infra: Reserve Signal Number'
  description: ''
  trigger:
  - platform: time
    at: '12:00:00'
  condition: []
  action:
  - service: notify.persistent_notification
    data:
      message: Reserve this number please.
  mode: single
- id: '1630348249804'
  alias: 'Buttons: TV Buttons'
  description: Buttons to control the TV
  use_blueprint:
    path: homeassistant/tuya_4_switch.yaml
    input:
      button_two_short_press:
      - service: automation.trigger
        data: {}
        target:
          entity_id: automation.tv_automation_mute
      button_two_long_press: []
      tuya_4button_scene_switch: 07b2cfa4cde6e837172d2a76444e1882
      button_four_short_press:
      - service: media_player.turn_on
        data: {}
        target:
          area_id: living_room
      - service: media_player.select_source
        target:
          area_id: living_room
        data:
          source: HDMI-1
      button_three_short_press:
      - service: media_player.turn_on
        data: {}
        target:
          area_id: living_room
      - service: media_player.select_source
        data:
          source: HDMI-2
        target:
          area_id: living_room
      button_one_short_press:
      - service: media_player.turn_on
        data: {}
        target:
          area_id: living_room
      - service: media_player.select_source
        target:
          area_id: living_room
        data:
          source: HDMI-3
      button_four_double_press:
      - service: media_player.turn_off
        data: {}
        target:
          area_id: living_room
      button_four_long_press: []
      button_three_double_press:
      - service: media_player.turn_off
        data: {}
        target:
          area_id: living_room
      button_three_long_press: []
      button_one_double_press:
      - service: media_player.turn_on
        data: {}
        target:
          area_id: living_room
      - service: media_player.select_source
        data:
          source: HDMI-4
        target:
          area_id: living_room
      button_one_long_press: []
      button_two_double_press:
      - service: automation.trigger
        data: {}
        target:
          entity_id: automation.tv_automation_unmute
- id: '1650416586411'
  alias: 'Infra: Phone IP Whitelisting'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.pixel_6_public_ip_address
    variables:
      public_ip: '{{ states.sensor.pixel_6_public_ip_address.state }}'
      wifi_connection: '{{ states.sensor.pixel_6_wifi_connection.state }}'
  condition: []
  action:
  - service: mikrotik_api.remove
    data:
      command: /ip firewall address-list
      find: /ip firewall address-list
      find_params: list="http_whitelist" address="{{ public_ip }}"
  - service: mikrotik_api.add
    data:
      command: /ip firewall address-list
      params: list="http_whitelist" address="{{ public_ip }}" {% if (wifi_connection
        == '<not connected>') %}timeout="24:00:00"{% endif %}" comment="{{ wifi_connection
        }}"
  mode: single
- id: '1652670207101'
  alias: 'House Mode: Night Trigger (Door)'
  description: ''
  trigger:
  - type: not_opened
    platform: device
    device_id: e2d17c9f732bd7369ae1a5eb6fb7684f
    entity_id: 6bb6182e6aa7d691040f8f162a2d93cc
    domain: binary_sensor
  condition:
  - condition: time
    before: 03:00:00
    after: '19:00:00'
    weekday:
    - sun
    - sat
    - fri
    - thu
    - wed
    - tue
    - mon
  action:
  - service: input_select.select_option
    data:
      option: Night
    target:
      entity_id: input_select.house_mode
  mode: single
- id: '1652670327204'
  alias: 'House Mode: Day Trigger (Door)'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: e2d17c9f732bd7369ae1a5eb6fb7684f
    entity_id: 6bb6182e6aa7d691040f8f162a2d93cc
    domain: binary_sensor
  condition:
  - condition: time
    before: '16:00:00'
    after: 04:00:00
    weekday:
    - mon
    - tue
    - thu
    - wed
    - fri
    - sat
    - sun
  action:
  - service: input_select.select_option
    data:
      option: Day
    target:
      entity_id:
      - input_select.house_mode
  mode: single
- id: '1652671167332'
  alias: 'A Remove| Night Mode: Disable Adaptive Lighting & Magic Area'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.night_mode
    to: 'on'
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.adaptive_lighting_master_bedroom_lights
  - service: light.turn_on
    data:
      brightness_pct: 31
      kelvin: 1000
    target:
      entity_id: light.master_bedroom_lights
  mode: single
- id: '1652671218733'
  alias: 'A Remove | Night Mode: Enable Adaptive Lighting & Magic Area'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.night_mode
    to: 'off'
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.adaptive_lighting_master_bedroom_lights
  mode: single
- id: '1660532203759'
  alias: 'Buttons: Master Bedroom'
  description: ''
  use_blueprint:
    path: niro1987/zha_ikea_tradfri_5button_remote_custom.yaml
    input:
      remote: dda5a35ca58ab1b57a0a2b727d121b0f
      power_short:
      - service: light.toggle
        data: {}
        target:
          area_id:
          - master_bedroom
      dimdown_short:
      - service: light.turn_off
        data: {}
        target:
          area_id:
          - master_closet
          - master_bathroom
          - master_bedroom
          - master_hall
      dimup_short:
      - service: light.turn_on
        data: {}
        target:
          area_id: master_bedroom
      dimup_long:
      - service: input_select.select_option
        data:
          option: Day
        target:
          entity_id: input_select.house_mode
      dimdown_long:
      - service: input_select.select_option
        data:
          option: Night
        target:
          entity_id: input_select.house_mode
- id: '1660610189672'
  alias: 'Button: Master Bedroom'
  description: ''
  use_blueprint:
    path: gtkow/ZHA - Sonoff SNZB-01.yaml
    input:
      remote: 194ed4f97e6562c7bcf8767b19d83413
      single_press:
      - service: light.toggle
        data: {}
        target:
          area_id: master_bedroom
      double_press:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.area_presence_hold_master_bedroom
- id: '1660610808504'
  alias: 'Button: Office'
  description: ''
  use_blueprint:
    path: gtkow/ZHA - Sonoff SNZB-01.yaml
    input:
      remote: daba698afb5e06a48c96b3e041a342b8
      single_press:
      - service: light.toggle
        data:
          brightness_pct: 90
        target:
          area_id: office
- id: '1661005890182'
  alias: 'Lights: Restore Default Colors'
  description: ''
  trigger: []
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.office_flipper_switch
      - light.hall_lights
      - light.master_bathroom_lights
      - light.tv_room_side_table_light
      - light.master_hall_lights
      - light.grow_room_lights
      - light.porch_lights
      - light.dining_room_game_corner_light_light
      area_id:
      - dining_room
      - living_room
      - office
  - service: light.toggle
    data: {}
    target:
      entity_id:
      - light.kitchen_lights
      - light.master_bedroom_lights
  - service: light.toggle
    data: {}
    target:
      entity_id:
      - light.kitchen_lights
      - light.master_bedroom_lights
  - service: scene.turn_on
    target:
      entity_id: scene.default_light_colors
    metadata: {}
  - service: scene.turn_on
    target:
      entity_id: scene.default_color_lights_off
    metadata: {}
  mode: single
- id: '1661008795175'
  alias: Hall Status
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.contact_front_lock
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.contact_front_lock
      state: 'on'
    then:
    - service: light.turn_on
      data: {}
      target:
        entity_id: light.hall_lights
    else:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.hall_lights
  mode: single
- id: '1661009594593'
  alias: 'Office: Control Hall Light'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.contact_office_door
  condition:
  - condition: state
    entity_id: input_select.house_mode
    state: Night
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.contact_office_door
      state: 'on'
    then:
    - service: light.turn_on
      data:
        brightness_pct: 35
        rgb_color:
        - 198
        - 70
        - 0
      target:
        entity_id: light.hall_light_status
    else:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.hall_light_status
  mode: single
- id: '1666063358700'
  alias: 'Climate Mode: Away'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.climate_mode
    to: Away
  condition:
  - condition: state
    entity_id: input_select.climate_mode
    state: Away
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Heat
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_heating_away.state }}'
      target:
        area_id: living_room
    - service: climate.set_hvac_mode
      data:
        hvac_mode: heat
      target:
        area_id: living_room
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Cool
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_cooling_away.state }}'
      target:
        area_id: living_room
    - service: climate.set_hvac_mode
      data:
        hvac_mode: cool
      target:
        area_id: living_room
  mode: single
- id: '1666410090998'
  alias: 'Climate Mode: Day'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.climate_mode
    to: Day
  condition:
  - condition: state
    entity_id: input_select.climate_mode
    state: Day
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Heat
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_heating_day.state }}'
      target:
        area_id: living_room
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Cool
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_cooling_day.state }}'
      target:
        area_id: living_room
  mode: single
- id: '1666410124566'
  alias: 'Climate Mode: Peak Hours'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.climate_mode
    to: Peak Hours
  condition:
  - condition: state
    entity_id: input_select.climate_mode
    state: Peak Hours
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Heat
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_heating_peak_hours.state
          }}'
      target:
        area_id: living_room
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Cool
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_cooling_peak_hours.state
          }}'
      target:
        area_id: living_room
  mode: single
- id: '1666410212073'
  alias: 'Climate Mode: Super'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.climate_mode
    to: Super Cool
  - platform: state
    entity_id:
    - input_select.climate_mode
    to: Super Heat
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.climate_mode
      state: Super Heat
    - condition: state
      entity_id: input_select.climate_mode
      state: Super Cool
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Heat
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_heating_super.state }}'
      target:
        area_id: living_room
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Cool
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_cooling_super.state }}'
      target:
        area_id: living_room
  mode: single
- id: '1666410455018'
  alias: 'Climate Mode: Night'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.climate_mode
    to: Night
  condition:
  - condition: state
    entity_id: input_select.climate_mode
    state: Night
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Heat
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_heating_night.state }}'
      target:
        area_id: living_room
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Cool
      - condition: state
        entity_id: input_select.climate_mode_providing
        state: Both
    then:
    - service: climate.set_temperature
      data_template:
        temperature: '{{ states.input_number.climate_mode_cooling_night.state }}'
      target:
        area_id: living_room
  mode: single
- id: '1666411618886'
  alias: 'Climate Mode: Providing'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.climate_mode_providing
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_select.climate_mode_providing
      state: Cool
    then:
    - service: climate.set_hvac_mode
      data:
        hvac_mode: cool
      target:
        area_id: living_room
  - if:
    - condition: state
      entity_id: input_select.climate_mode_providing
      state: Heat
    then:
    - service: climate.set_hvac_mode
      data:
        hvac_mode: heat
      target:
        area_id: living_room
  - if:
    - condition: state
      entity_id: input_select.climate_mode_providing
      state: Both
    then:
    - service: climate.set_hvac_mode
      data:
        hvac_mode: Heat/Cool
      target:
        area_id: living_room
  - service: automation.trigger
    data:
      skip_condition: false
    target:
      entity_id:
      - automation.climate_mode_night
      - automation.climate_mode_day
      - automation.climate_mode_away
      - automation.climate_mode_peak_hours
      - automation.climate_mode_super
  mode: single
- id: '1666414298157'
  alias: 'Climate Mode: House Mode Sync'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.house_mode
    to: Night
  - platform: state
    entity_id:
    - input_select.house_mode
    to: Away
  - platform: state
    entity_id:
    - input_select.house_mode
    to: Day
  condition: []
  action:
  - service: input_select.select_option
    data:
      option: '{{ states.input_select.house_mode.state }}'
    target:
      entity_id: input_select.climate_mode
  mode: single
- id: '1667095565781'
  alias: 'House Mode: Day/Away'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.house_home_count
    from: '0'
    to: '1'
    id: First Arrival
  - platform: state
    entity_id:
    - sensor.house_home_count
    from: '1'
    to: '0'
    id: Last Departure
  condition: []
  action:
  - if:
    - condition: trigger
      id: Last Departure
    then:
    - service: input_select.select_option
      data:
        option: Away
      target:
        entity_id: input_select.house_mode
    else:
    - service: input_select.select_option
      data:
        option: Day
      target:
        entity_id: input_select.house_mode
  mode: single
- id: '1667141355944'
  alias: 'House Lock: When unlocked for 10 minutes'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - lock.touchscreen_deadbolt_z_wave_plus
    to: unlocked
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: Unlocked for 10 minutes
  - platform: state
    entity_id:
    - binary_sensor.contact_front_door
    to: 'off'
    from: 'on'
    id: Door Closed
  condition:
  - condition: or
    conditions:
    - condition: trigger
      id: Unlocked for 10 minutes
    - condition: and
      conditions:
      - condition: trigger
        id: Door Closed
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.sensor.house_home_count.last_changed)
          <  timedelta(minutes=10).total_seconds() }}'
  action:
  - service: automation.trigger
    data: {}
    target:
      entity_id: automation.house_lock_lock_validation
  mode: single
- id: '1667150342921'
  alias: 'House Lock: When someone leaves'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.house_home_count
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state|int(0) > trigger.to_state.state|int(0)
      }}'
  action:
  - service: automation.trigger
    data: {}
    target:
      entity_id: automation.house_lock_lock_validation
  mode: single
- id: '1667150380222'
  alias: 'House Lock: Unlock when someone arrives'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.house_home_count
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state|int(0) < trigger.to_state.state|int(0)
      }}'
  - condition: state
    entity_id: input_select.house_lock_mode
    state: auto
  action:
  - service: lock.unlock
    data: {}
    target:
      area_id: kitchen
  mode: single
- id: '1667151041444'
  alias: 'House Lock: Validate Conditions & Lock'
  description: ''
  trigger: []
  condition:
  - condition: template
    value_template: '{# All the doors in the Kitchen are closed  #}'
  - condition: state
    entity_id: input_select.house_lock_mode
    state: auto
  action:
  - service: lock.lock
    data: {}
    target:
      area_id: kitchen
  mode: single
- id: '1668386418720'
  alias: 'Low Battery: Alert'
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      actions:
      - service: notify.persistent_notification
        data:
          message: Low Battery! {{sensors}}
- id: '1668482874051'
  alias: 'House Mode: Day'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.house_mode
    from: Night
    to: Day
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.night_mode
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.adaptive_lighting_sleep_mode_master_sink_lights
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.adaptive_lighting_master_bedroom_lights
  mode: single
- id: '1668482944676'
  alias: 'House Mode: Night'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.house_mode
    from: Day
    to: Night
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.night_mode
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.adaptive_lighting_sleep_mode_master_sink_lights
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.adaptive_lighting_master_bedroom_lights
  - service: light.turn_on
    data:
      brightness_pct: 8
      kelvin: 2000
    target:
      entity_id: light.master_bedroom_lights
  - service: media_player.turn_off
    data: {}
    target:
      area_id: living_room
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.tv_room_side_table_light
      - light.dining_room_game_corner_light_light
      - light.hall_light_status
      area_id:
      - dining_room
      - living_room
  mode: single
- id: '1668485452096'
  alias: 'Avalanch: Pre-Game'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.nhl_sensor
    to: PRE
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.house_mode
      state: Away
  action:
  - service: media_player.turn_on
    data: {}
    target:
      area_id: living_room
  - service: media_player.select_source
    data:
      source: HDMI-1
    target:
      area_id: living_room
  - service: scene.turn_on
    target:
      entity_id: scene.game_time
    metadata: {}
  mode: single
- id: '1668997929693'
  alias: 'Vacuum: Run Selected Segments (When Away)'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.house_mode
    to: Away
  condition: []
  action:
  - repeat:
      count: '{{ rooms | count }}'
      sequence:
      - service: script.turn_on
        data:
          variables:
            segments: '["18"]'
            room: '{{ rooms[repeat.index - 1] }}'
        target:
          entity_id: script.vacuum_single_section
    enabled: true
  variables:
    rooms: '{{ states.input_boolean | selectattr("entity_id", "match", "input_boolean.vacuum.*")
      | selectattr("state", "eq", "on") | sort(attribute="last_changed", reverse=true)
      | map(attribute="entity_id") | list }}'
  mode: single
- id: '1669085529205'
  alias: 'Vacuum: Cancel Run (On Arrival)'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.house_mode
    to: Day
  condition: []
  action:
  - service: script.turn_off
    data: {}
    target:
      entity_id: script.vacuum_single_section
  - service: vacuum.return_to_base
    data: {}
    target:
      area_id: living_room
  mode: single
- id: '1669088385167'
  alias: 'Vacuum: Schedule (Nightly)'
  description: ''
  trigger:
  - platform: time
    at: '23:59:50'
  condition: []
  action:
  - repeat:
      count: '{{ rooms | count }}'
      sequence:
      - service: input_boolean.turn_on
        data_template:
          entity_id: '{{ rooms[repeat.index - 1] }}'
    enabled: true
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.vacuum_kitchen
      - input_boolean.vacuum_office
      - input_boolean.vacuum_living_room
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.vacuum_living_room
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.vacuum_office
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.vacuum_kitchen
  mode: single
  variables:
    rooms: '{{ states.input_boolean | selectattr("entity_id", "match", "input_boolean.vacuum.*")
      | sort(attribute="last_changed", reverse=true) | map(attribute="entity_id")
      | list }}'
- id: '1676519473445'
  alias: 'TV Automation: Mute'
  description: ''
  trigger: []
  condition: []
  action:
  - service: media_player.volume_mute
    data:
      is_volume_muted: true
    target:
      area_id: living_room
  mode: single
- id: '1676519514455'
  alias: 'TV Automation: Unmute'
  description: ''
  trigger: []
  condition: []
  action:
  - service: media_player.volume_mute
    data:
      is_volume_muted: false
    target:
      area_id: living_room
  mode: single
- id: '1680050719892'
  alias: 'Avalanche: Game End'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.nhl_sensor
    to: Final
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.house_mode
      state: Away
  action:
  - service: automation.trigger
    data:
      skip_condition: true
    target:
      entity_id: automation.lights_restore_default_colors
  mode: single
- id: '1712981150233'
  alias: TV Buttons (New)
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 9edc57d84dc63ad3e90e3fa6cf59795f
    type: action
    subtype: 1_single
  condition: []
  action:
  - service: light.toggle
    metadata: {}
    data: {}
    target:
      area_id: office
  mode: single
- id: '1712981375914'
  alias: Bedroom Lights On
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 80658f61524311c7df4dae373f78b535
    type: action
    subtype: brightness_up_click
  condition: []
  action:
  - service: light.turn_on
    target:
      area_id: master_bedroom
    data: {}
  mode: single
- id: '1712981431951'
  alias: Turn Off Bedroom Lights
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 80658f61524311c7df4dae373f78b535
    type: action
    subtype: brightness_down_click
  condition: []
  action:
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      area_id:
      - master_bathroom
      - master_closet
      - master_bedroom
      - hall
  mode: single
- id: '1712982464266'
  alias: Day Mode
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 80658f61524311c7df4dae373f78b535
    type: action
    subtype: brightness_up_hold
  condition: []
  action:
  - service: input_select.select_option
    metadata: {}
    data:
      option: Day
    target:
      entity_id: input_select.house_mode
  mode: single
- id: '1712982502193'
  alias: Night Mode
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 80658f61524311c7df4dae373f78b535
    type: action
    subtype: brightness_down_hold
  condition: []
  action:
  - service: input_select.select_option
    metadata: {}
    data:
      option: Night
    target:
      entity_id: input_select.house_mode
  mode: single
