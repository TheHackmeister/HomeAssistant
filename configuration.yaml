# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:
#debugpy:
#wait: true

zha_toolkit:

# Text to speech
tts:
  - platform: picotts
    service_name: picotts_say
    #base_url: https://home.spencerslab.com
    language: "en-US"
    cache: false
notify:
  - platform: tts
    name: in_the_dining_room
    tts_service: tts.picotts_say
    media_player: media_player.dining_room_audio
  - platform: tts
    name: home_tts
    tts_service: tts.picotts_say
    media_player: media_player.home_tts
light:
  - platform: template
    lights:
      scene_night_bathroom_main:
        friendly_name: "Scene Night (Bathroom Main)"
        unique_id: scene_night_bathroom_main
        value_template: |-
          {% for entity_ids in state_attr('scene.night_bathroom_main', 'entity_id') %}
            {% if is_state(entity_ids, 'on') %}
              {% if loop.index == 1 %}
                true
              {% endif %}
            {% else %}
              false
            {% endif %}
          {% endfor %}
        turn_on:
          service: scene.turn_on
          target:
            entity_id: scene.night_bathroom_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: "{{ state_attr('scene.night_bathroom_main', 'entity_id') }}"

http:
  ip_ban_enabled: true
  login_attempts_threshold: 5
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.30.33.0/24

#auto_backup:
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
frontend:
  themes: !include_dir_merge_named themes

# panel_iframe:
#   router:
#     title: "Router"
#     url: "https://192.168.1.1"
#   mopidy:
#     title: "Audio"
#     url: "https://audio.spencerslab.com/iris/"

homeassistant:
  packages: !include_dir_named packages

logger:
  logs:
    homeassistant.components.http.ban: warning
sensor:
  - platform: nhl_api
    team_abbrev: col

  - platform: template
    sensors:
      away_team:
        friendly_name_template: "{% if states.sensor.nhl_sensor.attributes is defined and states.sensor.nhl_sensor.attributes.away_name is defined %}{{ states.sensor.nhl_sensor.attributes.away_name }}{%- endif %}"
        value_template: "{% if states.sensor.nhl_sensor.attributes is defined and states.sensor.nhl_sensor.attributes.away_score is defined %}{{ states.sensor.nhl_sensor.attributes.away_score }}{%- endif %}"
        entity_picture_template: "{% if states.sensor.nhl_sensor.attributes is defined and states.sensor.nhl_sensor.attributes.away_logo is defined %}{{ states.sensor.nhl_sensor.attributes.away_logo }}{%- endif %}"
      home_team:
        friendly_name_template: "{% if states.sensor.nhl_sensor.attributes is defined and states.sensor.nhl_sensor.attributes.home_name is defined %}{{ states.sensor.nhl_sensor.attributes.home_name }}{%- endif %}"
        value_template: "{% if states.sensor.nhl_sensor.attributes is defined and states.sensor.nhl_sensor.attributes.home_score is defined %}{{ states.sensor.nhl_sensor.attributes.home_score }}{%- endif %}"
        entity_picture_template: "{% if states.sensor.nhl_sensor.attributes is defined and states.sensor.nhl_sensor.attributes.home_logo is defined %}{{ states.sensor.nhl_sensor.attributes.home_logo }}{%- endif %}"
      house_home_count:
        friendly_name_template: "House: Home Count"
        value_template: "{{ dict((states.person)|groupby('state'))['home']|count }}"

rest_command:
  healthchecksio:
    url: https://hc-ping.com/89ba143b-b5bc-4074-bf95-b0897ec23102
    method: GET

shell_command:
  farm_to_manual_mode: 'echo "manual_mode" > /tmp/test.txt'
  farm_to_running_mode: 'echo "running_mode" > /tmp/test.txt'

#compensation:
#device_tracker:
#  - platform: ping
#    hosts:
#      spencer_phone_ping: 10.0.88.6
#    count: 90
#    scan_interval: 5
#  - platform: ping
#    hosts:
#      brianna_phone_ping: 10.0.88.50
#    count: 90
#    scan_interval: 5

#binary_sensor:
#  - platform: template
#    sensors:
#      # - spencer_home:
#        # If ping = true
#        # else if location = home
#        # else na
#        value_template: >-
#          {% if states.binary_sensor.spencer_phone_ping == true or states.device_tracker.spencer_spencerphone == "Home" %}
#            on
#          {% else  %}
#            off
#          {% endif %}
#        friendly_name: "Spencer Home"

input_number:
  calibration_input:
    min: 0
    max: 500
    mode: box

  # Will set attribute to calibration readings.
  calibration_readings:
    min: 0
    max: 500

  manual_raw:
    min: 0
    max: 500

#   home_score:
#     min: 0
#     max: 100

influxdb:
  default_measurement: state
  username: !secret influxdb_username
  password: !secret influxdb_password
  # How to use the friendly_name tag in Grafana
  # https://community.home-assistant.io/t/grafana-influxdb-using-friendly-names/41145/5#post_5
  tags_attributes:
    - friendly_name
    - hidden
# Info at: https://www.reddit.com/r/homeassistant/comments/10hc3vb/psa_adding_automations_to_the_left_panel/
panel_custom:
  - name: Automations
    sidebar_title: Automations
    sidebar_icon: mdi:cog-transfer
    js_url: /api/hassio/app/entrypoint.js
    url_path: config/automation/dashboard
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: Devices
    sidebar_title: Devices
    sidebar_icon: mdi:devices
    js_url: /api/hassio/app/entrypoint.js
    url_path: config/devices/dashboard
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
