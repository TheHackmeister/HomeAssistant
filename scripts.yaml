'1610683330227':
  alias: New Script
  sequence:
  - service: notify.mobile_app_one_a2005
    data:
      title: Check this out!
      message: Something happened at home!
  mode: single
add_to_calibration_list:
  variables:
    entity:
  fields:
    added_entity:
      description: The entity to add to the calibration list.
      example: sensor.temp_sensor
  alias: Add To Calibration List
  sequence:
  - service: var.set
    data:
      value_template: "{% if added_entity in states('var.calibration_entities') %}\n
        \ {{ states('var.calibration_values') }}\n{% else %}\n  {%- if not states('var.calibration_entities')|length
        == 0 %}{{ states('var.calibration_entities') }},{%- endif %}{{ added_entity
        }}\n{% endif %}\n"
      entity_id: var.calibration_entities
    entity_id: var.calibration_entities
  mode: parallel
  icon: mdi:home
  max: 10
clear_calibration_list:
  alias: Clear Calibration List
  sequence:
  - service: var.set
    data:
      value_template: '{}'
      entity_id: var.calibration_entities
    entity_id: var.calibration_entities
  mode: parallel
  icon: mdi:home
  max: 10
run_calibration:
  alias: Run Calibration
  sequence:
  - service: system_log.write
    data:
      message: Running Calibration
      level: warning
stop_calibration:
  alias: Stop Calibration
  sequence:
  - service: system_log.write
    data:
      message: Stopping Calibration
      level: warning
  mode: single
  icon: mdi:home
turn_off_all_lights:
  alias: Turn Off All Lights
  sequence:
  - service: light.turn_off
    target:
      area_id:
      - bathroom_main
      - dining_room
      - living_room
  mode: single
vacuum_single_section:
  alias: 'Vacuum: Single Section'
  sequence:
  - service: mqtt.publish
    data:
      topic: valetudo/dog/MapSegmentationCapability/clean/set
      payload_template: "{\"segment_ids\": {% set segments = states.sensor.valetudo_dog_map_segments.attributes
        -%}  {% set search = state_attr(room,\"friendly_name\") | replace('Vacuum
        ', '', 1) -%} [{%- for segmentId in segments -%} {%- if segments[segmentId]
        == search -%}\n  \"{{ segmentId }}\"\n{%- endif -%} {% endfor %}]}"
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - wait_template: '{{ is_state("vacuum.valetudo_dog", "returning") }}'
    continue_on_timeout: true
    enabled: true
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: '{{ room }}'
  mode: queued
  icon: mdi:robot-vacuum
  max: 20
